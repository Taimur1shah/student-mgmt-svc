plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
}

group 'com.skiply.student'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

allprojects {
    repositories {
        mavenCentral()
    }
    afterEvaluate {
        springBoot {
            mainClass = 'com.skiply.student.StudentApplication'
        }

        tasks.withType(Jar) {
            duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        }

        tasks.withType(Test).configureEach {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed"
                showStandardStreams = true
            }

            finalizedBy jacocoTestReport
        }

        jacocoTestReport {
            dependsOn test
            reports {
                xml.required = true
                csv.required = false
                html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
            }
        }
    }
}

ext {
    springdocVersion = '2.5.0'
    h2Version = '2.2.224'
}
springBoot {
    mainClass = 'com.skiply.student.StudentApplication'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.5.0'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    runtimeOnly "com.h2database:h2:${h2Version}"
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    implementation project(":student-api")
    implementation project(":student-application")
    implementation project(":student-domain")
    implementation project(":student-infrastructure")
}


test {
    useJUnitPlatform()
}